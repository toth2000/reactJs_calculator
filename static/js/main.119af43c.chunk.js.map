{"version":3,"sources":["Component/buttons.jsx","Component/operatorButton.jsx","Component/layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["Buttons","state","value","props","styleOfButton","height","width","margin","backgroundColor","color","textAlign","borderColor","borderRadius","changeBackgroundColor","x","style","setState","Fragment","this","onMouseOver","onMouseOut","onClick","Component","OperatorButton","val","background","fontSize","Layout","a","b","operatorPressed","operator","displayText","op","handleNumClick","console","log","handleOperatorClick","handleCalculation","result","y","top","position","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.119af43c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Buttons extends Component {\r\n  state = {\r\n    value: this.props.value,\r\n\r\n    styleOfButton: {\r\n      height: 100,\r\n      width: 150,\r\n      margin: 50,\r\n      backgroundColor: \"#deaaff\",\r\n      color: \"#fff\",\r\n      textAlign: \"center\",\r\n      borderColor: \"#fff\",\r\n      borderRadius: 16,\r\n    },\r\n  };\r\n\r\n  changeBackgroundColor = (x) => {\r\n    var style = { ...this.state.styleOfButton };\r\n    if (x === 1) style.backgroundColor = \"#d8bbff\";\r\n    else style.backgroundColor = \"#deaaff\";\r\n\r\n    this.setState({\r\n      styleOfButton: style,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          style={this.state.styleOfButton}\r\n          onMouseOver={() => {\r\n            this.changeBackgroundColor(1);\r\n          }}\r\n          onMouseOut={() => {\r\n            this.changeBackgroundColor(0);\r\n          }}\r\n          onClick={()=>this.props.onClick(this.props.value)}\r\n        >\r\n          {this.state.value}\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Buttons;\r\n","import React, { Component } from \"react\";\r\nclass OperatorButton extends Component {\r\n  state = { val: this.props.value,\r\n    styleOfButton: {\r\n            height: 150,\r\n            width: 80,\r\n            margin: 50,\r\n            borderColor: \"#52b69a\",\r\n            background: \"#fff\",\r\n            fontSize: 45,\r\n            color: \"#99d98c\",\r\n      }\r\n};\r\n\r\n\r\n  changeBackgroundColor = (x) => {\r\n    var style = { ...this.state.styleOfButton };\r\n    if (x === 1) style.backgroundColor = \"#52b69a\";\r\n    else style.backgroundColor = \"#fff\";\r\n\r\n    this.setState({\r\n      styleOfButton: style,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          style={this.state.styleOfButton}\r\n          onMouseOver={() => {\r\n            this.changeBackgroundColor(1);\r\n          }}\r\n          onMouseOut={() => {\r\n            this.changeBackgroundColor(0);\r\n          }}\r\n          onClick={()=>this.props.onClick(this.props.value)}\r\n        >\r\n          {this.state.val}\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OperatorButton;\r\n","import React, { Component } from 'react';\r\nimport NumButtons from './buttons';\r\nimport OperatorButton from './operatorButton';\r\nimport CSS from './layout.css';\r\n\r\nclass Layout extends Component {\r\n    state = { \r\n        a: 0,\r\n        b: null,\r\n        operatorPressed: false,\r\n        operator: ''\r\n    }\r\n\r\n    displayText = ()=>{\r\n        var a = this.state.a;\r\n        var b = this.state.b;\r\n        var op = this.state.operator;\r\n        if(b==null)\r\n            return a+' '+op+' ';\r\n        else\r\n            return a+' '+op+' '+b;\r\n    }\r\n\r\n    handleNumClick = (x)=>{\r\n   \r\n    var val\r\n\r\n       if(this.state.operatorPressed===false){\r\n            val = this.state.a;\r\n            val = (val*10) + x;\r\n            this.setState({\r\n                a : val\r\n            });\r\n        }\r\n       else{\r\n            val = this.state.b;\r\n            if(val===null)\r\n                val = 0;\r\n            val = (val*10) + x;\r\n            console.log('b: '+val)\r\n            this.setState({\r\n                b : val\r\n            });\r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    handleOperatorClick = (x)=>{\r\n\r\n        // if(this.state.b!==null && this.state.operator!=='')\r\n\r\n        this.setState({\r\n            operatorPressed: true,\r\n            operator: x\r\n        });\r\n    }\r\n\r\n    handleCalculation = ()=>{\r\n\r\n        var result;\r\n        var x = this.state.a;\r\n        var y = this.state.b;\r\n\r\n        if(this.state.operator==='' || y===null)\r\n            return;\r\n\r\n        switch (this.state.operator){\r\n            case '+':\r\n                result = x + y;\r\n                break;\r\n            case '-':\r\n                result = x - y;\r\n                break;\r\n            case 'x':\r\n                result = x * y;\r\n                break;\r\n            case '/':\r\n                result = x / y;\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        this.setState({\r\n            a: result,\r\n            b: null,\r\n            operatorPressed: false,\r\n            operator: ''\r\n        })\r\n    }\r\n\r\n    render() { \r\n\r\n        return ( \r\n\r\n            <div>\r\n\r\n            <div style={{\r\n                background: '#caf0f8',\r\n                height: 120,                \r\n            }}>\r\n               <h3 style={{\r\n                fontSize: 32,\r\n                top: '25%',\r\n                textAlign: 'center',\r\n                position: 'relative'\r\n               }}> {this.displayText()} </h3>\r\n            </div>\r\n            \r\n            <div className=\"num\">\r\n\r\n                <div >\r\n                    <NumButtons value={1} onClick={this.handleNumClick}/>\r\n                    <NumButtons value={2} onClick={this.handleNumClick}/>\r\n                    <NumButtons value={3} onClick={this.handleNumClick}/>\r\n\r\n                </div>\r\n\r\n                <div >\r\n                    <NumButtons value={4} onClick={this.handleNumClick}/>\r\n                    <NumButtons value={5} onClick={this.handleNumClick}/>\r\n                    <NumButtons value={6} onClick={this.handleNumClick}/>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <NumButtons value={7} onClick={this.handleNumClick}/>\r\n                    <NumButtons value={8} onClick={this.handleNumClick}/>\r\n                    <NumButtons value={9} onClick={this.handleNumClick}/>\r\n                </div>\r\n        \r\n            </div>\r\n        \r\n\r\n            <div className=\"operator\">\r\n                <div >\r\n                    <OperatorButton value={'x'} onClick={this.handleOperatorClick}/>\r\n                    <OperatorButton value={'/'} onClick={this.handleOperatorClick}/>\r\n                    <OperatorButton value={'+'} onClick={this.handleOperatorClick}/>\r\n                </div>\r\n\r\n                <div >\r\n                    <NumButtons value={0} onClick={this.handleNumClick}/>\r\n                    <OperatorButton value={'-'} onClick={this.handleOperatorClick}/>\r\n                    <OperatorButton value={'='} onClick={this.handleCalculation}/>\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Layout;","import Layout from './Component/layout'\n\nfunction App() {\n  return (\n    <div>\n      <Layout/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}